
Javascript数组中shift()和push(),unshift()和pop()操作使用方法


Javascript为数组专门提供了push和pop()方法，以便实现类似栈的行为。来看下面的例子：

var colors = new Array();       //创建一个数组

var count = colors.push("red","green");   //  推入两项，返回修改后数组的长度

alert(count);   // 2   返回修改后数组的长度

var item = colors.pop();   //取得最后一项

alert(item);           // "green"

alert(colors.length);   //  1

队列方法：

结合使用shift()和push()方法，可以像使用队列一样使用数组：

var colors = new Array();

var count = colors.push("red","green");  //推入两项

alert(count);   //2

count = colors.push("black");  // 从数组末端添加项,此时数组的顺序是： "red", "green" ,"black"

alert(count);  //3

var item = colors.shift();   // 取得第一项

alert(item);   // "red"

alert(colors.length);  //2

从例子中可以看出：

shift()方法：移除数组中的第一项并返回该项

push()方法：从数组末端添加项

若是想实现相反的操作的话，可以使用

unshift()方法：在数组的前端添加项

pop()方法：从数组末端移除项

var colors = new Array();

var count = colors.unshift("red","green");// 推入两项

alert(count);  // 2

count = colors.unshift("black");  // 从数组的前端添加项，此时数组的顺序是： "black", "red", "green"

alert(count);  //3

var item = colors.pop();

alert(item);    // 移除并返回的是最后一项   "green"

由以上的两组例子，可以清晰的看到这两组方法的用法了。
